name: Deploy-App-on-AKS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy"
        required: true
        type: choice
        default: dev
        options:
          - dev
          - staging
          - production
  push:
    branches:
      - develop

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: "noderegistries.azurecr.io"
          username: "noderegistries"
          password: "nazKbCN+6F6hP8F1YmzhWyle1hQHxUIIgQAx+F3rMv+ACRC8DUzu"

      - name: Build and push Docker image
        run: |
          docker build . -t noderegistries.azurecr.io/aks-nodejs-helm:${{ github.sha }}
          docker push noderegistries.azurecr.io/aks-nodejs-helm:${{ github.sha }}

  update-helm-chart:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install yq - portable yaml processor
        run: |
          wget https://github.com/mikefarah/yq/releases/download/3.3.4/yq_linux_amd64
          chmod +x yq_linux_amd64
          sudo mv yq_linux_amd64 /usr/local/bin/yq

      - name: Update Values.yaml
        run: |
          yq w -i nodeapp/values.yaml image.repository "noderegistries.azurecr.io/aks-nodejs-helm"
          yq w -i nodeapp/values.yaml image.tag "${{ github.sha }}"
          yq w -i nodeapp/Chart.yaml version "0.${{ github.run_number }}.0"

      - name: Commit & Push to GitHub
        run: |
          git config user.email "github-actions@github.com"
          git config user.name "GitHub Actions"
          git add .
          git commit -m "Update Values.yaml [skip ci]"
          git push

  package-push-helm-chart:
    runs-on: ubuntu-latest
    needs: update-helm-chart
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Helm
        run: |
          sudo curl -L https://get.helm.sh/helm-v3.10.1-linux-amd64.tar.gz | tar xz
          sudo mv linux-amd64/helm /usr/local/bin/helm

      - name: Packaging the Helm Chart
        run: helm package nodeapp --version "0.${{ github.run_number }}.0"

      - name: Log in to Helm Registry
        run: helm registry login noderegistries.azurecr.io --username noderegistries --password nazKbCN+6F6hP8F1YmzhWyle1hQHxUIIgQAx+F3rMv+ACRC8DUzu

      - name: Pushing Helm chart to registry
        run: helm push "nodeapp-0.${{ github.run_number }}.0.tgz" "oci://noderegistries.azurecr.io/helm"

  install-helm-chart:
    runs-on: ubuntu-latest
    needs: package-push-helm-chart
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Helm
        run: |
          sudo curl -L https://get.helm.sh/helm-v3.10.1-linux-amd64.tar.gz | tar xz
          sudo mv linux-amd64/helm /usr/local/bin/helm

      - name: Log in to Helm Registry
        run: helm registry login noderegistries.azurecr.io --username noderegistries --password nazKbCN+6F6hP8F1YmzhWyle1hQHxUIIgQAx+F3rMv+ACRC8DUzu

      # - name: Log in to Azure
      #   uses: azure/login@v1
      #   with:
      #     client-id: 6a7eceec-399a-462e-be05-8508a526be6e
      #     tenant-id: 287e9555-a4e3-48b9-9f39-9c97477c736f
      #     subscription-id: f6e80462-2876-4bd9-893f-6802bd537f70

      - name: Set up kubectl
        uses: azure/aks-set-context@v3
        with:
          resource-group: NodeRG
          cluster-name: NodeCluster

      - name: Install Helm Chart
        run: helm install nodeapp noderegistries.azurecr.io/helm/nodeapp-0.${{ github.run_number }}.0.tgz

      - name: Get the application URL
        run: |
          echo "Application URL: http://$(kubectl get service nodeapp -o jsonpath='{.status.loadBalancer.ingress[0].ip}'):$(kubectl get service nodeapp -o jsonpath='{.spec.ports[0].port}')"
